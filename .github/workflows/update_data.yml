name: Update Binary Star Positions

on:
  schedule:
    # Run at 00:00 UTC every day
    - cron: '0 0 * * *'
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: write

jobs:
  update-positions:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        persist-credentials: true
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas numpy scipy tqdm

    - name: Clean up old CSV files
      run: |
        echo "=== CLEANUP PROCESS ==="
        echo "Current date: $(date)"

        # Show all binary_positions files before cleanup
        echo "Files before cleanup:"
        ls -la binary_positions*.csv 2>/dev/null || echo "No binary_positions files found"

        # Calculate cutoff date (3 days ago)
        CUTOFF_DATE=$(date -d '3 days ago' '+%Y-%m-%d')
        echo "Cutoff date (files older than this will be deleted): $CUTOFF_DATE"

        # Delete files older than 3 days using date comparison
        for file in binary_positions_*.csv; do
          if [[ -f "$file" ]]; then
            # Extract date from filename (assumes format: binary_positions_YYYY-MM-DD.csv)
            FILE_DATE=$(echo "$file" | sed 's/binary_positions_\([0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}\)\.csv/\1/')

            # Compare dates
            if [[ "$FILE_DATE" < "$CUTOFF_DATE" ]]; then
              echo "Deleting old file: $file (date: $FILE_DATE)"
              rm "$file"
            else
              echo "Keeping recent file: $file (date: $FILE_DATE)"
            fi
          fi
        done

        echo "Files after cleanup:"
        ls -la binary_positions*.csv 2>/dev/null || echo "No binary_positions files found"

    - name: Run WDS parser
      run: |
        echo "Running WDS parser at $(date)"
        python wds_parser.py
        echo "Parser completed"
        ls -la binary_positions_*.csv

    - name: Commit and push if changed
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"

        # Add binary_positions CSV files
        git add binary_positions_*.csv

        # Check if there are any changes to commit
        if ! git diff --staged --quiet; then
          git commit -m "Update binary positions for $(date +'%Y-%m-%d')"
          git push origin main
          echo "Changes committed and pushed"
        else
          echo "No changes to commit"
        fi

